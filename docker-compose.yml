version: '3.8'

services:
  api_gateway:
    container_name: api_gateway
    build:
      context: .
      target: development
      dockerfile: ./apps/api-gateway/Dockerfile
    restart: always
    volumes:
      - ./:/app
    ports:
      - "3002:3000"
    depends_on:
      - auth_service
      - users_service
      - nats_transporter
    networks:
      - transporter

  auth_service:
    container_name: auth_service
    build:
      context: .
      target: development
      dockerfile: ./apps/auth/Dockerfile
    restart: always
    volumes:
      - ./:/app
    depends_on:
      - nats_transporter
    networks:
      - transporter

  users_service:
    container_name: users_service
    build:
      context: .
      target: development
      dockerfile: ./apps/users/Dockerfile
    restart: always
    volumes:
      - ./:/app
    depends_on:
      - nats_transporter
    networks:
      - transporter

#== MESSAGE BROKER
  nats_transporter:
    container_name: nats_transporter
    image: 'bitnami/nats:latest'
    ports:
      - "8222:8222"
    networks:
      - transporter

#== DATABASE
  postgres:
    container_name: postgres_database
    image: 'postgres:14-alpine'
    networks:
      - postgres
    restart: "unless-stopped"
    environment:
      TZ: 'GMT'
      PGTZ: 'GMT'
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres

      USERS_DATABASE: users_database
      AUTH_DATABASE: auth_database
    volumes:
      - ./db:/docker-entrypoint-initdb.d/

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: secret
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "8800:80"
    volumes:
      - /data/pgadmin:/root/.pgadmin
    links:
      - postgres:postgres
    networks:
      - postgres

networks:
  transporter:
    driver: bridge
  postgres:
    driver: bridge
